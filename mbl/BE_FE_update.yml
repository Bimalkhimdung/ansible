- name: Building BE 
  hosts: build
  connection: local
  gather_facts: no
  become: yes
  become_user: build
  vars:
      work_dir: "/home/build/aayulogic"
      be_dir: "{{ work_dir }}/irealhrsoft-backend"
      python_dir: "{{ be_dir }}/realhrsoft/bin/python"
      git_dir: "/usr/bin/git"
      fe_dir: "{{ work_dir }}/irhrs-frontend"
      yarn_dir: "/home/build/.nvm/versions/node/v16.18.0/bin/yarn"
      current_date: "{{ lookup('pipe', 'date +%d%m%Y') }}"
  tasks:
      # - name: Clean old app-compile files and .7z archives
        # ansible.builtin.find:
          # paths: "{{ be_dir }}"
          # patterns: ["app-compile", "*.7z"]
        # register: old_files
# 
      # - name: Remove old app-compile 
        # ansible.builtin.file:
          # path: "{{ item.path }}"
          # state: absent
        # loop: "{{ old_files.files }}"
        # when: old_files.matched > 0
      # - name: Git PULL
        # command: "{{ git_dir }} pull chdir={{ be_dir}}"

      - name: Checkout "{{ branch_name }}" branch 
        ansible.builtin.command:
          cmd: "git checkout {{ branch_name }}"
        args:
          chdir: "{{ be_dir }}"
  
      - name: Pull latest changes for "{{ branch_name }}"
        ansible.builtin.command:
          cmd: "git pull origin {{ branch_name }}"
        args:
          chdir: "{{ be_dir }}"
  
      # - name: Build app-compile 
        # ansible.builtin.command:
          # cmd: "{{ python_dir }} setup.py build_ext -j11 --inplace"
        # args:
          # chdir: "{{ be_dir }}"
      - command: "rm app_compile_{{ current_date }}.7z chdir={{ be_dir }}"
        ignore_errors: yes

      - name: Compress the app-compile folder 
        command: "/usr/bin/7z a app_compile_{{ current_date }}.7z app-compile chdir={{ be_dir }}"
  
      - name: Fetch the app_compile archive to local
        ansible.builtin.synchronize:
          src: "{{ be_dir }}/app_compile_{{ current_date }}.7z"
          dest: "/home/bimal/"
          mode: pull
      - name: Delete old dist
        file:
          path: "{{ item }}"
          state: absent
        with_items:
        - "{{ fe_dir }}/dist"
      - find:
          paths: "{{ fe_dir }}"
          patterns: "*.7z"
        register: found_dist_file
      - file:
          path: "{{ item.path }}"
          state: absent
        with_items:
        - "{{ found_dist_file.files }}"        
      - name: Git PULL
        command: "{{ git_dir }} pull chdir={{ fe_dir}}"

      - name: Git checkout  {{ branch_name }} Branch.
        command: "{{ git_dir }} checkout {{ branch_name }}  chdir={{ fe_dir }}"
      
      - name: Git Pull {{ branch_name }}
        command: "{{ git_dir }} pull origin {{ branch_name }} chdir={{ fe_dir }}"
      
      - name: Set clinet_name for Build Dist file
        ansible.builtin.lineinfile:
            path: "{{ fe_dir }}/.env"
            regexp: '^VUE_APP_CLIENT='
            line: "VUE_APP_CLIENT='realhr'"
            create: yes
      
      - name: yarn build
        shell: |
          source /home/build/.nvm/nvm.sh
          yarn build -j10 
        args:
          chdir: "{{ fe_dir }}"
          executable: /bin/bash
      
      - name: Making Zip file
        command: "/usr/bin/7z a dist_{{ current_date }}.7z dist chdir={{ fe_dir }} "
      
      - name: Fetching  dist to local 
        ansible.builtin.synchronize:
            src: "{{ fe_dir }}/dist_{{ current_date }}.7z"
            dest: "/home/bimal/"
            mode: pull          